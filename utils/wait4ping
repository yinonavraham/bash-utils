#!/bin/bash
source $BASH_UTILS_HOME/lib/clicommon
source $BASH_UTILS_HOME/lib/clilog
source $BASH_UTILS_HOME/lib/cliargs

usage() {
	scriptname=`basename "$0"`
	echo "Usage: $scriptname [OPTIONS] HOST"
	echo " Ping to a target host and wait until it responds successfully or timeout reaches."
	echo "   HOST            - the target host name or IP address"
	echo " Options:"
	echo "   -s, --silent    - no output, rely only on the return code (0-success, 1-failure)"
	echo "   -t, --timeout T - timeout of T seconds"
	echo "   -h, --help      - this help"
}

init_args() {
	target_host=""
	silent=false
	timeout=30
}

cliargs_arg_requires_value() {
	if [[ "$1" == "-t" ]] || [[ "$1" == "--timeout" ]]; then
		return 0
	fi
	return 1
}

cliargs_parse_arg() {
	clilog_debug "parse_arg $1 $2"
	if [[ "$1" == "-s" ]] || [[ "$1" == "--silent" ]]; then
		clilog_debug "parse_arg: silent=true"
		silent=true
		clilog_trace "parse_arg: return 1"
	elif [[ "$1" == "-t" ]] || [[ "$1" == "--timeout" ]]; then
		timeout=$2
		clilog_debug "parse_arg: timeout=$timeout"
		cliargs_assert_numeric "timeout" $timeout
	elif [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
		usage
		exit 0
	else 
		if [[ "$target_host" != "" ]]; then
			print_error "target host is already set to '$target_host', the value '$1' is redundant"
			usage
			exit 1
		fi
		target_host=$1
	fi
}

print() {
	if [[ $silent != true ]]; then
		echo $@
	else
		clilog_debug "print: $@"
	fi
}

main() {
	init_args
	cliargs_parse "$@"
	cliargs_assert_required "target host" "$target_host"

	clilog_debug "target_host: $target_host"
	clilog_debug "timeout:     $timeout"
	clilog_debug "silent:      $silent"

	((count = timeout))
	while [[ $count -gt 0 ]]; do
		print -ne "[]"
		ping -c 1 -W 1 "$target_host" &> /dev/null
		if [[ $? -eq 0 ]]; then
			print ""
			print "Ping successful"
			exit 0
		fi
		((count = count - 1))
	done
	print ""
	print "Ping failed"
	exit 1
}

main "$@"